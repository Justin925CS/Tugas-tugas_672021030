package view;

import controller.MatakuliahController;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Matakuliah;

public class FrameMatakuliah extends javax.swing.JFrame {

    public MatakuliahController mc = new MatakuliahController();
    public List<Matakuliah> listMakul = new ArrayList<Matakuliah>();

    public FrameMatakuliah() {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((screenSize.width - this.getWidth())/2, (screenSize.height - this.getHeight())/2);
        this.mc = new MatakuliahController();
        this.loadMatakuliah();
    }

    public void loadMatakuliah() {
        listMakul = mc.getAll();
        if (!listMakul.isEmpty()) {
            Object[][] data = new Object[this.listMakul.size()][7];
            int i = 0;
            for (Matakuliah mtk : this.listMakul) {
                data[i][0] = mtk.getKodeMakul();
                data[i][1] = mtk.getNamaMakul();
                data[i][2] = mtk.getSks();
                data[i][3] = mtk.getNamaDosen();
                data[i][4] = mtk.getHari();
                data[i][5] = mtk.getJam();
                data[i][6] = mtk.getRuang();
                i++;
            }
            this.jTable1.setModel(
                    new DefaultTableModel(data,
                            new String[]{"Kode Makul", "Nama Makul", "SKS",
                                "Nama Dosen", "Hari", "Jam", "Ruang"}));
            this.jScrollPane1.setViewportView(jTable1);
        } else {
           
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtKodeMakul = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNamaMakul = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSks = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNamaDosen = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbHari = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        txtJam = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtRuang = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtKataKunci = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cmbKolom = new javax.swing.JComboBox();
        btnCari = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnHapus = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Matakuliah");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tambah Data Matakuliah", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Kode Makul");

        txtKodeMakul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKodeMakulActionPerformed(evt);
            }
        });
        txtKodeMakul.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKodeMakulKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Nama Makul");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("SKS");

        txtSks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSksActionPerformed(evt);
            }
        });
        txtSks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSksKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Nama Dosen");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Hari");

        cmbHari.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbHari.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu" }));
        cmbHari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHariActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Jam");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Ruang");

        btnSimpan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtKodeMakul)
                    .addComponent(txtNamaMakul)
                    .addComponent(txtSks)
                    .addComponent(txtNamaDosen)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cmbHari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtJam)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtRuang, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtKodeMakul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNamaMakul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtNamaDosen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(cmbHari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSimpan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtRuang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cari Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Kata Kunci");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Kolom");

        cmbKolom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cmbKolom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "kodeMakul", "namaMakul", "sks", "hari", "jam", "namaDosen", "ruang" }));

        btnCari.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtKataKunci)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmbKolom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtKataKunci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmbKolom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data Matakuliah", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode Makul", "Nama Makul", "SKS", "Nama Dosen", "Hari", "Jam", "Ruang"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnHapus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnUbah.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRefresh.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                    .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUbah)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed

        if (txtKodeMakul.getText().equals("") || txtNamaDosen.getText().equals("") || txtSks.getText().equals("")
                || txtNamaDosen.getText().equals("") || txtJam.getText().equals("") || txtRuang.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Data tidak lengkap", "Peringatan", JOptionPane.ERROR_MESSAGE);
        } else {
            String hari = "";
            Matakuliah mk = new Matakuliah();
            mk.setKodeMakul(txtKodeMakul.getText());
            mk.setNamaMakul(txtNamaMakul.getText());
            mk.setSks(Integer.parseInt(txtSks.getText()));
            if (cmbHari.getSelectedIndex() == 0) {
                hari = "Senin";
            } else if (cmbHari.getSelectedIndex() == 1) {
                hari = "Selasa";
            } else if (cmbHari.getSelectedIndex() == 2) {
                hari = "Rabu";
            } else if (cmbHari.getSelectedIndex() == 3) {
                hari = "Kamis";
            } else if (cmbHari.getSelectedIndex() == 4) {
                hari = "jumat";
            } else {
                hari = "Sabtu";
            }
            mk.setHari(hari);
            mk.setJam(txtJam.getText());
            mk.setNamaDosen(txtNamaDosen.getText());
            mk.setRuang(txtRuang.getText());
            String status = this.mc.tambahMakul(mk);
            JOptionPane.showMessageDialog(this, status, "Keterangan", JOptionPane.INFORMATION_MESSAGE);
            loadMatakuliah();
        }
        txtKodeMakul.setText("");
        txtNamaMakul.setText("");
        txtNamaDosen.setText("");
        txtSks.setText("");
        txtJam.setText("");
        txtNamaDosen.setText("");
        txtRuang.setText("");
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed

        if (JOptionPane.showConfirmDialog(this,
                "Yakin Hapus?", "Konfirmasi",
                JOptionPane.YES_NO_OPTION) == 0) {
            String status = this.mc.hapusMatakuliah(
                    listMakul.get(jTable1.getSelectedRow()).
                    getKodeMakul());
            JOptionPane.showMessageDialog(null, status);
            loadMatakuliah();
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        Matakuliah mk = listMakul.get(
                jTable1.getSelectedRow());
        txtKodeMakul.setText(mk.getKodeMakul());
        txtNamaMakul.setText(mk.getNamaMakul());
        txtSks.setText(mk.getSks() + "");
        cmbHari.setSelectedItem(mk.getHari());
        txtJam.setText(mk.getJam());
        txtNamaDosen.setText(mk.getNamaDosen());
        txtRuang.setText(mk.getRuang());
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Matakuliah mk = new Matakuliah();
        String hari;
        mk.setKodeMakul(txtKodeMakul.getText());
        mk.setNamaMakul(txtNamaMakul.getText());
        mk.setSks(Integer.parseInt(txtSks.getText()));
        if (cmbHari.getSelectedIndex() == 0) {
            hari = "Senin";
        } else if (cmbHari.getSelectedIndex() == 1) {
            hari = "Selasa";
        } else if (cmbHari.getSelectedIndex() == 2) {
            hari = "Rabu";
        } else if (cmbHari.getSelectedIndex() == 3) {
            hari = "Kamis";
        } else if (cmbHari.getSelectedIndex() == 4) {
            hari = "Jumat";
        } else {
            hari = "Sabtu";
        }
        mk.setHari(hari);
        mk.setJam(txtJam.getText());
        mk.setNamaDosen(txtNamaDosen.getText());
        mk.setRuang(txtRuang.getText());

        String status = this.mc.editMakul(
                listMakul.get(jTable1.getSelectedRow()).
                getKodeMakul(), mk);
        JOptionPane.showMessageDialog(null, status);
        loadMatakuliah();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtKodeMakul.setText("");
        txtNamaMakul.setText("");
        txtSks.setText("");
        txtNamaDosen.setText("");
        txtJam.setText("");
        txtRuang.setText("");
        cmbHari.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        String kode = "";
        kode = txtKataKunci.getText();

        if (cmbKolom.getSelectedIndex() == 0) {
            listMakul = mc.getKodeKuliah(kode);
            if (!listMakul.isEmpty()) {
                Object[][] data = new Object[this.listMakul.size()][7];
                int i = 0;
                for (Matakuliah mtk : this.listMakul) {
                    data[i][0] = mtk.getKodeMakul();
                    data[i][1] = mtk.getNamaMakul();
                    data[i][2] = mtk.getSks();
                    data[i][3] = mtk.getNamaDosen();
                    data[i][4] = mtk.getHari();
                    data[i][5] = mtk.getJam();
                    data[i][6] = mtk.getRuang();
                    i++;
                }
                this.jTable1.setModel(
                        new DefaultTableModel(data,
                                new String[]{"Kode Makul", "Nama Makul", "SKS",
                                    "Nama Dosen", "Hari", "Jam", "Ruang"}));
                this.jScrollPane1.setViewportView(jTable1);
            } else {
                jTable1.setModel(null);
            }
        } else if (cmbKolom.getSelectedIndex() == 1) {

            listMakul = mc.getNamaKuliah(kode);
            if (!listMakul.isEmpty()) {
                Object[][] data = new Object[this.listMakul.size()][7];
                int i = 0;
                for (Matakuliah mtk : this.listMakul) {
                    data[i][0] = mtk.getKodeMakul();
                    data[i][1] = mtk.getNamaMakul();
                    data[i][2] = mtk.getSks();
                    data[i][3] = mtk.getNamaDosen();
                    data[i][4] = mtk.getHari();
                    data[i][5] = mtk.getJam();
                    data[i][6] = mtk.getRuang();
                    i++;
                }
                this.jTable1.setModel(
                        new DefaultTableModel(data,
                                new String[]{"Kode Makul", "Nama Makul", "SKS",
                                    "Nama Dosen", "Hari", "Jam", "Ruang"}));
                this.jScrollPane1.setViewportView(jTable1);
            } else {
                jTable1.setModel(null);
            }
        } else if (cmbKolom.getSelectedIndex() == 2) {
            int kodesks;
            kodesks = Integer.parseInt(txtKataKunci.getText());
            listMakul = mc.getSks(kodesks);
            if (!listMakul.isEmpty()) {
                Object[][] data = new Object[this.listMakul.size()][7];
                int i = 0;
                for (Matakuliah mtk : this.listMakul) {
                    data[i][0] = mtk.getKodeMakul();
                    data[i][1] = mtk.getNamaMakul();
                    data[i][2] = mtk.getSks();
                    data[i][3] = mtk.getNamaDosen();
                    data[i][4] = mtk.getHari();
                    data[i][5] = mtk.getJam();
                    data[i][6] = mtk.getRuang();
                    i++;
                }
                this.jTable1.setModel(
                        new DefaultTableModel(data,
                                new String[]{"Kode Makul", "Nama Makul", "SKS",
                                    "Nama Dosen", "Hari", "Jam", "Ruang"}));
                this.jScrollPane1.setViewportView(jTable1);
            } else {
                jTable1.setModel(null);
            }
        } else if (cmbKolom.getSelectedIndex() == 3) {

            listMakul = mc.getHari(kode);
            if (!listMakul.isEmpty()) {
                Object[][] data = new Object[this.listMakul.size()][7];
                int i = 0;
                for (Matakuliah mtk : this.listMakul) {
                    data[i][0] = mtk.getKodeMakul();
                    data[i][1] = mtk.getNamaMakul();
                    data[i][2] = mtk.getSks();
                    data[i][3] = mtk.getNamaDosen();
                    data[i][4] = mtk.getHari();
                    data[i][5] = mtk.getJam();
                    data[i][6] = mtk.getRuang();
                    i++;
                }
                this.jTable1.setModel(
                        new DefaultTableModel(data,
                                new String[]{"Kode Makul", "Nama Makul", "SKS",
                                    "Nama Dosen", "Hari", "Jam", "Ruang"}));
                this.jScrollPane1.setViewportView(jTable1);
            } else {
                jTable1.setModel(null);
            }
        } else if (cmbKolom.getSelectedIndex() == 4) {

            listMakul = mc.getJam(kode);
            if (!listMakul.isEmpty()) {
                Object[][] data = new Object[this.listMakul.size()][7];
                int i = 0;
                for (Matakuliah mtk : this.listMakul) {
                    data[i][0] = mtk.getKodeMakul();
                    data[i][1] = mtk.getNamaMakul();
                    data[i][2] = mtk.getSks();
                    data[i][3] = mtk.getNamaDosen();
                    data[i][4] = mtk.getHari();
                    data[i][5] = mtk.getJam();
                    data[i][6] = mtk.getRuang();
                    i++;
                }
                this.jTable1.setModel(
                        new DefaultTableModel(data,
                                new String[]{"Kode Makul", "Nama Makul", "SKS",
                                    "Nama Dosen", "Hari", "Jam", "Ruang"}));
                this.jScrollPane1.setViewportView(jTable1);
            } else {
                jTable1.setModel(null);
            }
        } else if (cmbKolom.getSelectedIndex() == 5) {

            listMakul = mc.getNamaDosen(kode);
            if (!listMakul.isEmpty()) {
                Object[][] data = new Object[this.listMakul.size()][7];
                int i = 0;
                for (Matakuliah mtk : this.listMakul) {
                    data[i][0] = mtk.getKodeMakul();
                    data[i][1] = mtk.getNamaMakul();
                    data[i][2] = mtk.getSks();
                    data[i][3] = mtk.getNamaDosen();
                    data[i][4] = mtk.getHari();
                    data[i][5] = mtk.getJam();
                    data[i][6] = mtk.getRuang();
                    i++;
                }
                this.jTable1.setModel(
                        new DefaultTableModel(data,
                                new String[]{"Kode Makul", "Nama Makul", "SKS",
                                    "Nama Dosen", "Hari", "Jam", "Ruang"}));
                this.jScrollPane1.setViewportView(jTable1);
            } else {
                jTable1.setModel(null);
            }
        } else if (cmbKolom.getSelectedIndex() == 6) {

            listMakul = mc.getRuang(kode);
            if (!listMakul.isEmpty()) {
                Object[][] data = new Object[this.listMakul.size()][7];
                int i = 0;
                for (Matakuliah mtk : this.listMakul) {
                    data[i][0] = mtk.getKodeMakul();
                    data[i][1] = mtk.getNamaMakul();
                    data[i][2] = mtk.getSks();
                    data[i][3] = mtk.getNamaDosen();
                    data[i][4] = mtk.getHari();
                    data[i][5] = mtk.getJam();
                    data[i][6] = mtk.getRuang();
                    i++;
                }
                this.jTable1.setModel(
                        new DefaultTableModel(data,
                                new String[]{"Kode Makul", "Nama Makul", "SKS",
                                    "Nama Dosen", "Hari", "Jam", "Ruang"}));
                this.jScrollPane1.setViewportView(jTable1);
            } else {
                jTable1.setModel(null);
            }
        }

        txtKataKunci.setText("");
        cmbKolom.setSelectedIndex(0);
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        listMakul = mc.getAll();
        if (!listMakul.isEmpty()) {
            Object[][] data = new Object[this.listMakul.size()][7];
            int i = 0;
            for (Matakuliah mtk : this.listMakul) {
                data[i][0] = mtk.getKodeMakul();
                data[i][1] = mtk.getNamaMakul();
                data[i][2] = mtk.getSks();
                data[i][3] = mtk.getNamaDosen();
                data[i][4] = mtk.getHari();
                data[i][5] = mtk.getJam();
                data[i][6] = mtk.getRuang();
                i++;
            }
            this.jTable1.setModel(
                    new DefaultTableModel(data,
                            new String[]{"Kode Makul", "Nama Makul", "SKS",
                                "Nama Dosen", "Hari", "Jam", "Ruang"}));
            this.jScrollPane1.setViewportView(jTable1);
        } else {
            jTable1.setModel(null);
        }
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void txtSksKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSksKeyReleased
        String inputSKS = this.txtSks.getText();
        String temp = "";

        if (!cekAngka(inputSKS)) {
            JOptionPane.showMessageDialog(this, "Input SKS harus Amgka", "Peringatan", JOptionPane.ERROR_MESSAGE);
            for (int i = 0; i < inputSKS.length() - 1; i++) {
                temp += inputSKS.charAt(i) + "";
            }
            txtSks.setText(temp);
        }
    }//GEN-LAST:event_txtSksKeyReleased

    private void txtKodeMakulKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKodeMakulKeyReleased
        boolean ada = false;
        if (!txtKodeMakul.getText().equals("")) {
            ada = mc.cekkode(txtKodeMakul.getText());
        }
        if (ada) {
            JOptionPane.showMessageDialog(this, "Kode " + txtKodeMakul.getText() + " sudah ada", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtKodeMakulKeyReleased

    private void cmbHariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbHariActionPerformed

    private void txtKodeMakulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKodeMakulActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKodeMakulActionPerformed

    private void txtSksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSksActionPerformed

    public boolean cekAngka(String SKSnya) {
        boolean hasil = true;
        for (int i = 0; i < SKSnya.length(); i++) {
            int Ascii = (int) SKSnya.charAt(i);
            if (Ascii < 48 || Ascii > 57) {
                hasil = false;
                break;
            }
        }
        return hasil;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMatakuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMatakuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMatakuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMatakuliah.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMatakuliah().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbHari;
    private javax.swing.JComboBox cmbKolom;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtJam;
    private javax.swing.JTextField txtKataKunci;
    private javax.swing.JTextField txtKodeMakul;
    private javax.swing.JTextField txtNamaDosen;
    private javax.swing.JTextField txtNamaMakul;
    private javax.swing.JTextField txtRuang;
    private javax.swing.JTextField txtSks;
    // End of variables declaration//GEN-END:variables
}
